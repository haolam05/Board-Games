c
questions
q
questions
c
q
User.new(liker)
liker
s
likers
c
q
likers
q
c
questions
q
questionsq
c
q
qq
questions
c
q
questions
c
q
questions
followers
c
instance_variables
require user
require 'user'
User.new("fname"=>"Hao",'lname'=>"Lam")
self
self.file
s
n
c
q
User
User.find_by_id(author_id)
require_relative 'user'
self
User.find_by_id(author_id)
User
s
n
m
c
q
s
n
require_relative 'model_base'
Question.all
self
Question
c
result
q
 params.keys.map { |key| key + ' = ? ' }.join(' AND ')
values
q
self
table
q
self.table
table
q
self.class
self
Question.table
self.class
table
q
self.class
self
q
result.nil?
result
c
result
c
n
s
result.nil?
result
n
id
c
q
@database.last_insert_row_id
n
s
c
d
s
c
id
s
id
c
s
n
c
s
n
c
db.last_insert_row_id
db
n
q
s
n
s
q
n
@database
n
s
q
id
id\
q
n
id
c
q
id
c
exit
q.QuestionsDatabase.instance.last_insert_row_id
@id
id
c
q
QuestionsDatabase.instance.last_insert_row_id
Question.all[id]
q.all
QuestionsDatabase.instance.last_insert_row_id
@id
c
exit
self.id
id
instance_variables_values
c
exit
self.ied
id
instance_variables_values
instance_variables
c
exit
eit
self.instance_variables.map { |attribute| attribute[1..-1] }.map { |attribute| attribute + ' = ?, ' }
a
self.instance_variables.map { |attribute| attribute[1..-1] }.map { |attribute| attribute + ' = ?, ' }
c
q
exit
clear
exit
instance_variables
c
exit
str
exit
n
instance_variables_values
question_marks
instance_variables.join(', ')
n
c
exit
clear
exit
instance_variables.join(', ')
instance_variables
n
instance_variables
n
question_marks
exit
instance_variables.join(', ')
question_marks
instance_variables
instance_variables_values
exit
instance_variables
c
exit
Question.instance_variables
self.instance_variables
instance_variables
