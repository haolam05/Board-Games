q
c
q
point
neighbors(point)
s
c
display print_maze
q
c
cc
c
cc
c
display print_maze
display print
c
display print
q
cq
c
(((2 - x2).abs + (12 - y2)**2).abs).abs**0.5q
(((3 - x2).abs + (13 - y2)**2).abs).abs**0.5
(((3 - x2).abs + (13 - y2)**2).abs).abs
(((2 - x2).abs + (12 - y2)**2).abs).abs
((3 - x2).abs + (13 - y2)**2).abs 
((2 - x2).abs + (12 - y2)**2).abs 
((3 - x2).abs + (13 - y2)**2).abs + ((3 - x3).abs + (13 - y3).abs).abs 
((2 - x2).abs + (12 - y2)**2).abs + ((2 - x3).abs + (12 - y3).abs).abs 
((2 - x2)abs + (12 - y2)**2).abs + ((2 - x3).abs + (12 - y3).abs).abs 
((2 - x2)**2 + (12 - y2)**2).abs + ((2 - x3)**2 + (12 - y3)**2).abs 
((3 - x2)**2 + (13 - y2)**2).abs + ((3 - x3)**2 + (13 - y3)**2).abs 
((3 - x2)**2 + (11 - y2)**2).abs + ((3 - x3)**2 + (11 - y3)**2).abs 
((3 - x2) + (11 - y2)).abs + ((3 - x3) + (11 - y3)).abs 
((3 - x2) + (13 - y2)).abs + ((3 - x3) + (13 - y3)).abs 
((2 - x2) + (12 - y2)).abs + ((2 - x3) + (12 - y3)).abs 
((x1 - x2) + (y1 - y2)).abs + ((x1 - x3) + (y1 - y3)).abs 
print distance
c
cc
c
cc
c
cc
print
c
n
m
n
q
c
q
c
print
c
shortest_path
q
c
display print
print
c
x
q
c
y
q
c
cc
c
display print
q
(((3 - x2)+(3-start_idx[0])) + ((11 - y2)+(11-start_idx[1]))).abs + @countX
(((2 - x2)+(2-start_idx[0])) + ((12 - y2)+(12-start_idx[1]))).abs + @countX
(((3 - x2)+(3-start_idx[0])) + ((13 - y2)+(13-start_idx[1]))).abs + @countX
((3 - x2)+(3-start_idx[0])).abs + ((11 - y2)+(11-start_idx[1])).abs + @countX
((2 - x2)+(2-start_idx[0])).abs + ((12 - y2)+(12-start_idx[1])).abs + @countX
((3 - x2)+(3-start_idx[0])).abs + ((13 - y2)+(13-start_idx[1])).abs + @countX
((3 - x2)+(3-start_idx[0])) + ((13 - y2)+(13-start_idx[1])) + @countX
((3 - x2)+(3-start_idx[0])) + ((11 - y2)+(11-start_idx[1])) + @countX
((2 - x2)+(2-start_idx[0])) + ((12 - y2)+(12-start_idx[1])) + @countX
((3 - x2)+(3-start_idx[0]))**2 + ((11 - y2)+(11-start_idx[1]))**2 + @countX
((3 - x2)+(3-start_idx[0]))**2 + ((13 - y2)+(13-start_idx[1]))**2 + @countX
((2 - x2)+(2-start_idx[0]))**2 + ((12 - y2)+(12-start_idx[1]))**2 + @countX
(((3 - x2)+(3-start_idx[0]))**2 + ((13 - y2)+(13-start_idx[1]))**2) + @countX
(((3 - x2)+(3-start_idx[0]))**2 + ((13 - y2)+(13-start_idx[1]))**2)**0.5 + @countX
((2 - x2)+(2-start_idx[0]))**2 + ((12 - y2)+(12-start_idx[1]))**2 + @countX
(((2 - x2)+(2-start_idx[0]))**2 + ((12 - y2)+(12-start_idx[1]))**2)**0.5 + @countX
((3 - x2)+(2-start_idx[0]))**2 + ((11 - y2)+(12-start_idx[1]))**2 + @countX
((3 - x2)+(2-start_idx[0]))**2 + ((13 - y2)+(12-start_idx[1]))**2 + @countX
((2 - x2)+(2-start_idx[0]))**2 + ((12 - y2)+(12-start_idx[1]))**2 + @countX
((3 - x2)+(2-start_idx[0])) + ((11 - y2)+(12-start_idx[1])).abs + @countX
((3 - x2)+(2-start_idx[0])) + ((13 - y2)+(12-start_idx[1])).abs + @countX
((2 - x2)+(2-start_idx[0])) + ((12 - y2)+(12-start_idx[1])).abs + @countX
((2 - x2)+(2-@start_idx[0])) + ((12 - y2)+(12-@start_idx[1])).abs + @countX
((3 - x2 - @countX)**2 + (11 - y2 - @countX)**2).abs**0.5 + @countX
((3 - x2 - @countX)**2 + (13 - y2 - @countX)**2).abs**0.5 + @countX
((2 - x2 - @countX)**2 + (12 - y2 - @countX)**2).abs**0.5 + @countX
((3 - x2)**2 - (13 - y2)**2).abs**0.5 + @countX
((2 - x2)**2 - (12 - y2)**2).abs**0.5 + @countX
((3 - x2)**2 + (11 - y2)**2).abs**0.5 + @countX
((3 - x2)**2 + (13 - y2)**2).abs**0.5 + @countX
((2 - x2)**2 + (12 - y2)**2).abs**0.5 + @countX
((2 - x2)**2 + (12 - y2)**2).abs + @countX
((3 - x2)**2 + (13 - y2)**2).abs + @countX
((3 - x2)**2 + (11 - y2)**2).abs + @countX
((3 - x2) + (11 - y2)).abs + @countX
((2 - x2) + (12 - y2)).abs + @countX
((3 - x2) + (13 - y2)).abs + @countX
neighbors(point)
neighbors(point
((x1 - x2) + (y1 - y2)).abs + @countX
n
display nearest_distance
s
print
c
cc
c
print
c
cc
c
cc
c
q
c
display print
q
w
qy
c
q
c
cc
c
cc
c
display print
q
@mazes
c
@maze
@countX < @mazes[1]
@maze.empty?
q
c
y
q
@countX < @mazes[1]
@maze.empty?
@mazes = [to_s, @countX]
@mazes
c
s
n
@mazes
c
to_s
point
n
q
c
q
c
cc
c
cc
c
cc
c
display print
print
c
q
c
y
q
c
cc
c
cc
c
display print
q
c
display print
c
cc
c
display print
print
c
print
c
q
neighbors(point)
neighbors(poitnm
nearest_idx
n
s
n
s
c
cc
c
cc
c
display print
q
n
s
n
s
c
cc
c
display print
q
c
display print
q
c
n
display print
display render
n
display render
q
n
display print
q
c
q
n
display print
q
distance = ((3-x2) + (13-y2)).abs + @countX
distance = ((2-x2) + (12-y2)).abs + @countX
neighbors(point)
n
display nearest_idx
display nearest distance
s
n
nn
n
display print
q
n
nn
n
display print
n
display print
q
c
